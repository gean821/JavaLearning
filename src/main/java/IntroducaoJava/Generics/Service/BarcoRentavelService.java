package IntroducaoJava.Generics.Service;

import IntroducaoJava.Generics.Dominio.Barco;

import java.util.ArrayList;
import java.util.List;

    public class BarcoRentavelService {
        private List<Barco> barcosDisponiveis = new ArrayList<>(List.of(new Barco("lancha"), new Barco("Iate")));

        public Barco buscarBarcoDisponivel () {          //Retorna um Barco porque o objetivo dessa fun√ß√£o √© buscar um Barco dispon√≠vel e entreg√°-lo para quem solicitou.
                                                            //N√£o recebe par√¢metros porque a busca n√£o depende de um Barco espec√≠fico, mas sim do primeiro Barco dispon√≠vel na lista.
                                                            // Resumo: Essa fun√ß√£o fornece um Barco ao chamador, ent√£o retorna um Barco e n√£o precisa receber par√¢metros.
            System.out.println("Buscando Barco disponivel");
            Barco Barco = barcosDisponiveis.removeFirst();
            System.out.println("Alugando Barco : " + Barco);
            System.out.println("Barcos disponiveis para alugar : ");
            System.out.println(barcosDisponiveis);
            return Barco;
        }

        public void retornarBarcoAlugado (Barco Barco){
            System.out.println("Devolvendo Barco:" + Barco);
            barcosDisponiveis.add(Barco);
            System.out.println("Barcos disponiveis para alugar : ");
            System.out.println(barcosDisponiveis);
        }

    }
    /*
Recebe um Barco como par√¢metro porque quem chamou essa fun√ß√£o j√° tem um Barco alugado e agora precisa devolv√™-lo.
N√£o retorna nada (void) porque o objetivo √© somente adicionar o Barco de volta √† lista, e n√£o h√° necessidade de um retorno.
üîπ Resumo: Essa fun√ß√£o recebe um Barco para devolu√ß√£o, ent√£o precisa do par√¢metro Barco Barco, mas n√£o precisa retornar nada.
*/




