package IntroducaoJava.Generics.Service;
//vamos imaginar que estmaos fazendo uma classe que vai alugar um carro ou barco.

import IntroducaoJava.Generics.Dominio.Carro;
import java.util.ArrayList;
import java.util.List;

//simulando um banco de dados de carro usando um array list normal
public class CarroRentavelService {
    private List<Carro> carrosDisponiveis = new ArrayList<>(List.of(new Carro("Fiat uno"), new Carro("Mercedes")));

        public Carro buscarCarroDisponivel () {          //Retorna um Carro porque o objetivo dessa fun√ß√£o √© buscar um carro dispon√≠vel e entreg√°-lo para quem solicitou.
                                                            //N√£o recebe par√¢metros porque a busca n√£o depende de um carro espec√≠fico, mas sim do primeiro carro dispon√≠vel na lista.
                                                                                                      // Resumo: Essa fun√ß√£o fornece um carro ao chamador, ent√£o retorna um Carro e n√£o precisa receber par√¢metros.
            System.out.println("Buscando carro disponivel");
            Carro carro = carrosDisponiveis.removeFirst();
            System.out.println("Alugando carro : " + carro);
            System.out.println("Carros disponiveis para alugar : ");
            System.out.println(carrosDisponiveis);
            return carro;
        }

        public void retornarCarroAlugado (Carro carro){
            System.out.println("Devolvendo carro:" + carro);
            carrosDisponiveis.add(carro);
            System.out.println("Carros disponiveis para alugar : ");
            System.out.println(carrosDisponiveis);
        }

    }
    /*
Recebe um Carro como par√¢metro porque quem chamou essa fun√ß√£o j√° tem um carro alugado e agora precisa devolv√™-lo.
N√£o retorna nada (void) porque o objetivo √© somente adicionar o carro de volta √† lista, e n√£o h√° necessidade de um retorno.
üîπ Resumo: Essa fun√ß√£o recebe um carro para devolu√ß√£o, ent√£o precisa do par√¢metro Carro carro, mas n√£o precisa retornar nada.
*/


